

events {
        worker_connections 768;
        # multi_accept on;
}

http {

  proxy_send_timeout 120;
  proxy_read_timeout 300;
  proxy_buffering    off;
  keepalive_timeout  5 5;
  tcp_nodelay        on;

#  server {
#      listen   *:443;
#      server_name  repo.example.com;

      # allow large uploads of files
#      client_max_body_size 1G;

      # optimize downloading files larger than 1G
      #proxy_max_temp_file_size 2G;

#      ssl on;
#      ssl_certificate      cert/nginx-selfsigned.crt;
#      ssl_certificate_key  cert/nginx-selfsigned.key;

#      location / {
         # Use IPv4 upstream address instead of DNS name to avoid attempts by nginx to use IPv6 DNS lookup
#         proxy_pass http://containers-00:8081/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto "https";
#     }
#  }
	
  server {
        listen 80 default_server;
        listen [::]:80 default_server;        # New root location

        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

 
        location / {
                root /var/www/localhost/htdocs; 
                # return 404;
        }        # You may need this to prevent return 404 recursion.

        location = /404.html {
                internal;
        }
  }


}

